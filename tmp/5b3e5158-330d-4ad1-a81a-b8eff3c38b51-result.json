{"name": "已领取账户再次领取优惠券失败", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <testmain.TestMain object at 0x000001AE25FCC8B0>\nParameters = {'assert_way': 'message', 'casename': '已领取账户再次领取优惠券失败', 'content_type': 'application/x-www-form-urlencoded', 'data': 'name=979172251@qq.com', ...}\n\n    @allure.feature(\"优惠券\")\n    @allure.story(\"注册优惠券\")\n    @pytest.mark.parametrize(\"Parameters\", registerCoupons_cases, ids=registerCoupons_casename)\n    def test_registerCoupons(self, Parameters):\n        allure.dynamic.title(Parameters['casename'])  # 测试用例名称\n>       RegisterCoupons().registerCoupons(Parameters)\n\n..\\main\\testmain.py:351: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\mode\\registerCoupons.py:44: in registerCoupons\n    get(self.sess, casename, url, data, header, result, assert_way)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nsess = <requests.sessions.Session object at 0x000001AE2544A550>\ncasename = '已领取账户再次领取优惠券失败'\nurl = 'http://18.118.13.94:81/jeecg-boot/sys/api/users/registerCoupons'\ndata = 'name=979172251@qq.com'\nheader = {'Accept': 'application/json,text/plain,*/*', 'Accept-Encoding': 'gzip,deflate', 'Accept-Language': 'zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6', 'Connection': 'keep-alive', ...}\nresult = '操作失败', assert_way = 'message'\n\n    def get(sess,casename,url,data,header,result,assert_way):\n        if 'POST' in casename:\n            res = sess.post(url=url + '?' + data, headers=header)\n            print('入口1')\n            print(res.json())\n            print(f'预期结果为 {result}')\n            print(f'实际结果为 {res.json()[assert_way]}')\n            assert result in res.json()[assert_way]\n        elif 'DELETE' in casename:\n            res = sess.delete(url=url + '?' + data, headers=header)\n            print('入口2')\n            print(res.json())\n            print(f'预期结果为 {result}')\n            print(f'实际结果为 {res.json()[assert_way]}')\n            assert result in res.json()[assert_way]\n        elif 'PUT' in casename:\n            res = sess.put(url=url + '?' + data, headers=header)\n            print('入口3')\n            print(res.json())\n            print(f'预期结果为 {result}')\n            print(f'实际结果为 {res.json()[assert_way]}')\n            assert result in res.json()[assert_way]\n        elif '未登录' in casename:\n            res = requests.get(url=url + '?' + data)\n            print('入口4')\n            print(res.json())\n            print(f'预期结果为 {result}')\n            print(f'实际结果为 {res.json()[assert_way]}')\n            assert result in res.json()[assert_way]\n        else:\n            res = sess.get(url=url + '?' + data, headers=header)\n            print('入口0')\n            print(res.json())\n            print(f'预期结果为 {result}')\n            print(f'实际结果为 {res.json()[assert_way]}')\n            print(res.url)\n>           assert result in res.json()[assert_way]\nE           AssertionError\n\n..\\mode\\get_mode.py:43: AssertionError"}, "attachments": [{"name": "stdout", "source": "9325e537-fc18-4b45-9bed-4e8ae1f60470-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "Parameters", "value": "{'casename': '已领取账户再次领取优惠券失败', 'url': 'http://18.118.13.94:81/jeecg-boot/sys/api/users/registerCoupons', 'data': 'name=979172251@qq.com', 'content_type': 'application/x-www-form-urlencoded', 'result': '操作失败', 'assert_way': 'message', 'mode': '注册成功领取优惠券'}"}], "start": 1648892912303, "stop": 1648892912825, "uuid": "0449834c-bfe1-4941-b28d-f706c5c5ee9a", "historyId": "706e2d22290f6844a7d46dbdc21ed7ee", "testCaseId": "1f6d284a4c447e0d902ca3efab9cf2d8", "fullName": "main.testmain.TestMain#test_registerCoupons", "labels": [{"name": "story", "value": "注册优惠券"}, {"name": "feature", "value": "优惠券"}, {"name": "epic", "value": "O&Kmarts 前端接口测试用例"}, {"name": "parentSuite", "value": "main"}, {"name": "suite", "value": "testmain"}, {"name": "subSuite", "value": "TestMain"}, {"name": "host", "value": "DESKTOP-NB3FDE0"}, {"name": "thread", "value": "10872-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "main.testmain"}]}